(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{463:function(v,_,t){"use strict";t.r(_);var a=t(65),n=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"流形-manifold"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流形-manifold"}},[v._v("#")]),v._v(" 流形 Manifold")]),v._v(" "),t("p",[t("strong",[v._v("流形学习的本质是，建立一种映射，从高维空间到低维空间的映射。")])]),v._v(" "),t("p",[v._v("这种映射是“非线性降维”，PCA是线性降维")]),v._v(" "),t("p",[v._v("方法一：Isomap")]),v._v(" "),t("p",[v._v("找到一个低维空间，使得样本间的距离，在高维空间和低维空间基本一致。")]),v._v(" "),t("p",[v._v("地球仪表面与平面地图，是三维映射到二维的关系。")]),v._v(" "),t("p",[v._v("我们绘制平面地图的原则，就是保持城市之间的距离，在平面地图上，跟地球仪是一致的。(平面地图稍有扭曲，但基本保持，城市距离跟地球仪一致)")]),v._v(" "),t("p",[v._v("这种一致，是“全局一致”，就是对于地球上1万个城市，彼此之间的距离，在平面地图上，跟地球仪是一致的。")]),v._v(" "),t("p",[v._v("运算量太大!1万个城市，要考虑安排1亿对儿距离的优化。")]),v._v(" "),t("p",[v._v("方法二：LLE")]),v._v(" "),t("p",[v._v('为了克服isomap方法，计算量过大的问题。（想偷懒)\n考虑到，每个城市，都有距离最近的3个哥们。\n例如，沈阳的哥们城市:铁岭、抚顺、鞍山例如，深圳的哥们城市:东莞、广州、珠海\n那么我们绘制平面地图的原则，就改成了∶\n平面地图稍有扭曲，但基本保持，“哥们城市"距离跟地球仪一致。离得太远的城市，不用照顾情绪。\n计算量一下子小多了。')]),v._v(" "),t("p",[v._v("是一种很优秀的非线性降维的方法")]),v._v(" "),t("h2",{attrs:{id:"参数流形和数据流形"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数流形和数据流形"}},[v._v("#")]),v._v(" 参数流形和数据流形")]),v._v(" "),t("p",[v._v("在流形学习（Manifold Learning）中，流形是指数据空间中的一种局部欧几里德几何结构，通常用来描述高维数据在低维空间中的嵌入。流形学习旨在发现高维数据的低维表示，以便更好地理解和处理数据。")]),v._v(" "),t("p",[v._v("在流形学习中，有两种主要类型的流形，即参数流形（parametric manifold）和数据流形（data manifold）：")]),v._v(" "),t("p",[t("strong",[v._v("参数流形（Parametric Manifold）：")])]),v._v(" "),t("p",[v._v("参数流形是由参数化函数定义的，通常用数学模型表示。这些数学模型将高维数据映射到低维空间。参数流形假设数据在低维空间中具有某种确定的数学结构，如线性映射、非线性映射或其他数学函数。流形学习算法试图学习这些参数，以便能够在低维空间中重构或表示数据。")]),v._v(" "),t("blockquote",[t("p",[t("strong",[v._v("优点：")])]),v._v(" "),t("p",[v._v("参数流形的表达能力通常较强，可以捕获复杂的数据结构。")]),v._v(" "),t("p",[v._v("学习到的参数可以提供对数据的解释和理解。")]),v._v(" "),t("p",[t("strong",[v._v("缺点：")])]),v._v(" "),t("p",[v._v("参数流形通常依赖于先验的数学模型，这些模型可能不够灵活，无法适应所有类型的数据。")]),v._v(" "),t("p",[v._v("参数流形的学习过程可能较为复杂，需要大量的数据和计算。")])]),v._v(" "),t("p",[t("strong",[v._v("数据流形（Data Manifold）：")])]),v._v(" "),t("p",[v._v("数据流形是在数据空间中定义的实际数据分布。数据流形假设高维数据通常分布在一个或多个连续的低维流形上。流形学习算法的目标是通过观察数据中的局部结构来推测数据流形的全局结构，并在低维空间中表示数据。")]),v._v(" "),t("blockquote",[t("p",[t("strong",[v._v("优点：")])]),v._v(" "),t("p",[v._v("数据流形不依赖于预先设定的数学模型，更加灵活和自适应。")]),v._v(" "),t("p",[v._v("数据流形可以应用于各种类型的数据，不限于特定的数学模型。")]),v._v(" "),t("p",[t("strong",[v._v("缺点：")])]),v._v(" "),t("p",[v._v("数据流形的表达能力受到局部观测和采样的限制，可能难以完全捕获全局数据结构。")]),v._v(" "),t("p",[v._v("在高维空间中，流形结构可能变得非常复杂，导致流形学习变得困难。")])]),v._v(" "),t("p",[v._v("在实际应用中，流形学习算法可以同时使用参数流形和数据流形的概念，以充分利用两者的优点，提高对数据的建模和表达能力。不同的流形学习方法可以根据数据特点和问题需求选择合适的模型和策略。")])])}),[],!1,null,null,null);_.default=n.exports}}]);